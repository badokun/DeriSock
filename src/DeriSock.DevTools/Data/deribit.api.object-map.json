{
  "WithdrawalEntry": {
    "description": "",
    "properties": {
      "address": {
        "name": "address",
        "description": "Address in proper format for currency",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "amount": {
        "name": "amount",
        "description": "Amount of funds in given currency",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "confirmed_timestamp": {
        "name": "confirmed_timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch) of withdrawal confirmation, \u0060null\u0060 when not confirmed",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      },
      "created_timestamp": {
        "name": "created_timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      },
      "currency": {
        "name": "currency",
        "description": "Currency, i.e \u0060\u0022BTC\u0022\u0060, \u0060\u0022ETH\u0022\u0060, \u0060\u0022USDC\u0022\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "fee": {
        "name": "fee",
        "description": "Fee in currency",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "id": {
        "name": "id",
        "description": "Withdrawal id in Deribit system",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      },
      "priority": {
        "name": "priority",
        "description": "Id of priority level",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "state": {
        "name": "state",
        "description": "Withdrawal state, allowed values : \u0060unconfirmed\u0060, \u0060confirmed\u0060, \u0060cancelled\u0060, \u0060completed\u0060, \u0060interrupted\u0060, \u0060rejected\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "transaction_id": {
        "name": "transaction_id",
        "description": "Transaction id in proper format for currency, \u0060null\u0060 if id is not available",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "updated_timestamp": {
        "name": "updated_timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      }
    },
    "methods": [
      "private/get_withdrawals.response.data"
    ],
    "subscriptions": [
    ]
  },
  "DepositEntry": {
    "description": "",
    "properties": {
      "address": {
        "name": "address",
        "description": "Address in proper format for currency",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "amount": {
        "name": "amount",
        "description": "Amount of funds in given currency",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "currency": {
        "name": "currency",
        "description": "Currency, i.e \u0060\u0022BTC\u0022\u0060, \u0060\u0022ETH\u0022\u0060, \u0060\u0022USDC\u0022\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "received_timestamp": {
        "name": "received_timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      },
      "state": {
        "name": "state",
        "description": "Deposit state, allowed values : \u0060pending\u0060, \u0060completed\u0060, \u0060rejected\u0060, \u0060replaced\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "transaction_id": {
        "name": "transaction_id",
        "description": "Transaction id in proper format for currency, \u0060null\u0060 if id is not available",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "updated_timestamp": {
        "name": "updated_timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      }
    },
    "methods": [
      "private/get_deposits.response.data"
    ],
    "subscriptions": [
    ]
  },
  "TransactionLogEntry": {
    "description": "",
    "properties": {
      "amount": {
        "name": "amount",
        "description": "The amount of traded contracts",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "balance": {
        "name": "balance",
        "description": "Cash balance after the transaction",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "cashflow": {
        "name": "cashflow",
        "description": "For futures and perpetual contracts: Realized session PNL (since last settlement). For options: the amount paid or received for the options traded.",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "change": {
        "name": "change",
        "description": "Change in cash balance. For trades: fees and options premium paid/received. For settlement: Futures session PNL and perpetual session funding.",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "commission": {
        "name": "commission",
        "description": "Commission paid so far (in base currency)",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "currency": {
        "name": "currency",
        "description": "Currency, i.e \u0060\u0022BTC\u0022\u0060, \u0060\u0022ETH\u0022\u0060, \u0060\u0022USDC\u0022\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "equity": {
        "name": "equity",
        "description": "Updated equity value after the transaction",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "id": {
        "name": "id",
        "description": "Unique identifier",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      },
      "info": {
        "name": "info",
        "description": "Additional information regarding transaction. Strongly dependent on the log entry type",
        "required": true,
        "apiDataType": "object",
        "dataType": "object",
        "arrayDataType": ""
      },
      "instrument_name": {
        "name": "instrument_name",
        "description": "Unique instrument identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "interest_pl": {
        "name": "interest_pl",
        "description": "Actual funding rate of trades and settlements on perpetual instruments",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "mark_price": {
        "name": "mark_price",
        "description": "Market price during the trade",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "order_id": {
        "name": "order_id",
        "description": "Unique order identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "position": {
        "name": "position",
        "description": "Updated position size after the transaction",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "price": {
        "name": "price",
        "description": "Settlement/delivery price or the price level of the traded contracts",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "price_currency": {
        "name": "price_currency",
        "description": "Currency symbol associated with the \u0060price\u0060 field value",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "profit_as_cashflow": {
        "name": "profit_as_cashflow",
        "description": "Indicator informing whether the cashflow is waiting for settlement or not",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "session_rpl": {
        "name": "session_rpl",
        "description": "Session realized profit and loss",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "session_upl": {
        "name": "session_upl",
        "description": "Session unrealized profit and loss",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "side": {
        "name": "side",
        "description": "One of: \u0060short\u0060 or \u0060long\u0060 in case of settlements, \u0060close sell\u0060 or \u0060close buy\u0060 in case of deliveries, \u0060open sell\u0060, \u0060open buy\u0060, \u0060close sell\u0060, \u0060close buy\u0060 in case of trades",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "timestamp": {
        "name": "timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      },
      "total_interest_pl": {
        "name": "total_interest_pl",
        "description": "Total session funding rate",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "trade_id": {
        "name": "trade_id",
        "description": "Unique (per currency) trade identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "type": {
        "name": "type",
        "description": "Transaction category/type. The most common are: \u0060trade\u0060, \u0060deposit\u0060, \u0060withdrawal\u0060, \u0060settlement\u0060, \u0060delivery\u0060, \u0060transfer\u0060, \u0060swap\u0060, \u0060correction\u0060. New types can be added any time in the future",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "user_id": {
        "name": "user_id",
        "description": "Unique user identifier",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      },
      "user_role": {
        "name": "user_role",
        "description": "Trade role of the user: maker or taker",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "user_seq": {
        "name": "user_seq",
        "description": "Sequential identifier of user transaction",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      },
      "username": {
        "name": "username",
        "description": "System name or user defined subaccount alias",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/get_transaction_log.response.logs"
    ],
    "subscriptions": [
    ]
  },
  "UserTrade": {
    "description": "",
    "properties": {
      "amount": {
        "name": "amount",
        "description": "Trade amount. For perpetual and futures - in USD units, for options it is amount of corresponding cryptocurrency contracts, e.g., BTC or ETH.",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "block_trade_id": {
        "name": "block_trade_id",
        "description": "Block trade id - when trade was part of block trade",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "direction": {
        "name": "direction",
        "description": "Direction: \u0060buy\u0060, or \u0060sell\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "fee": {
        "name": "fee",
        "description": "User\u0027s fee in units of the specified \u0060fee_currency\u0060",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "fee_currency": {
        "name": "fee_currency",
        "description": "Currency, i.e \u0060\u0022BTC\u0022\u0060, \u0060\u0022ETH\u0022\u0060, \u0060\u0022USDC\u0022\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "index_price": {
        "name": "index_price",
        "description": "Index Price at the moment of trade",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "instrument_name": {
        "name": "instrument_name",
        "description": "Unique instrument identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "iv": {
        "name": "iv",
        "description": "Option implied volatility for the price (Option only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "label": {
        "name": "label",
        "description": "User defined label (presented only when previously set for order by user)",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "liquidation": {
        "name": "liquidation",
        "description": "Optional field (only for trades caused by liquidation): \u0060\u0022M\u0022\u0060 when maker side of trade was under liquidation, \u0060\u0022T\u0022\u0060 when taker side was under liquidation, \u0060\u0022MT\u0022\u0060 when both sides of trade were under liquidation",
        "required": false,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "liquidity": {
        "name": "liquidity",
        "description": "Describes what was role of users order: \u0060\u0022M\u0022\u0060 when it was maker order, \u0060\u0022T\u0022\u0060 when it was taker order",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "mark_price": {
        "name": "mark_price",
        "description": "Mark Price at the moment of trade",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "matching_id": {
        "name": "matching_id",
        "description": "Always \u0060null\u0060, except for a self-trade which is possible only if self-trading is switched on for the account (in that case this will be id of the maker order of the subscriber)",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "order_id": {
        "name": "order_id",
        "description": "Id of the user order (maker or taker), i.e. subscriber\u0027s order id that took part in the trade",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "order_type": {
        "name": "order_type",
        "description": "Order type: \u0060\u0022limit\u0060, \u0060\u0022market\u0022\u0060, or \u0060\u0022liquidation\u0022\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "post_only": {
        "name": "post_only",
        "description": "\u0060true\u0060 if user order is post-only",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "price": {
        "name": "price",
        "description": "Price in base currency",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "profit_loss": {
        "name": "profit_loss",
        "description": "Profit and loss in base currency.",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "reduce_only": {
        "name": "reduce_only",
        "description": "\u0060true\u0060 if user order is reduce-only",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "self_trade": {
        "name": "self_trade",
        "description": "\u0060true\u0060 if the trade is against own order. This can only happen when your account has self-trading enabled. Contact an administrator if you think you need that",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "state": {
        "name": "state",
        "description": "Order state: \u0060\u0022open\u0022\u0060, \u0060\u0022filled\u0022\u0060, \u0060\u0022rejected\u0022\u0060, \u0060\u0022cancelled\u0022\u0060, \u0060\u0022untriggered\u0022\u0060 or \u0060\u0022archive\u0022\u0060 (if order was archived)",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "tick_direction": {
        "name": "tick_direction",
        "description": "Direction of the \u0022tick\u0022 (\u00600\u0060 = Plus Tick, \u00601\u0060 = Zero-Plus Tick, \u00602\u0060 = Minus Tick, \u00603\u0060 = Zero-Minus Tick).",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      },
      "timestamp": {
        "name": "timestamp",
        "description": "The timestamp of the trade (milliseconds since the UNIX epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      },
      "trade_id": {
        "name": "trade_id",
        "description": "Unique (per currency) trade identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "trade_seq": {
        "name": "trade_seq",
        "description": "The sequence number of the trade within instrument",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      },
      "underlying_price": {
        "name": "underlying_price",
        "description": "Underlying price for implied volatility calculations (Options only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/execute_block_trade.response.trades",
      "private/get_block_trade.response.trades",
      "private/get_last_block_trades_by_currency.response.trades",
      "private/buy.response.trades",
      "private/sell.response.trades",
      "private/edit.response.trades",
      "private/edit_by_label.response.trades",
      "private/close_position.response.trades",
      "private/get_user_trades_by_currency.response.trades",
      "private/get_user_trades_by_currency_and_time.response.trades",
      "private/get_user_trades_by_instrument.response.trades",
      "private/get_user_trades_by_instrument_and_time.response.trades"
    ],
    "subscriptions": [
      "user.changes.{instrument_name}.{interval}.response.trades",
      "user.changes.{kind}.{currency}.{interval}.response.trades"
    ]
  },
  "PublicTrade": {
    "description": "",
    "properties": {
      "amount": {
        "name": "amount",
        "description": "Trade amount. For perpetual and futures - in USD units, for options it is amount of corresponding cryptocurrency contracts, e.g., BTC or ETH.",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "block_trade_id": {
        "name": "block_trade_id",
        "description": "Block trade id - when trade was part of block trade",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "direction": {
        "name": "direction",
        "description": "Direction: \u0060buy\u0060, or \u0060sell\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "index_price": {
        "name": "index_price",
        "description": "Index Price at the moment of trade",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "instrument_name": {
        "name": "instrument_name",
        "description": "Unique instrument identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "iv": {
        "name": "iv",
        "description": "Option implied volatility for the price (Option only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "liquidation": {
        "name": "liquidation",
        "description": "Optional field (only for trades caused by liquidation): \u0060\u0022M\u0022\u0060 when maker side of trade was under liquidation, \u0060\u0022T\u0022\u0060 when taker side was under liquidation, \u0060\u0022MT\u0022\u0060 when both sides of trade were under liquidation",
        "required": false,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "mark_price": {
        "name": "mark_price",
        "description": "Mark Price at the moment of trade",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "price": {
        "name": "price",
        "description": "Price in base currency",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "tick_direction": {
        "name": "tick_direction",
        "description": "Direction of the \u0022tick\u0022 (\u00600\u0060 = Plus Tick, \u00601\u0060 = Zero-Plus Tick, \u00602\u0060 = Minus Tick, \u00603\u0060 = Zero-Minus Tick).",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      },
      "timestamp": {
        "name": "timestamp",
        "description": "The timestamp of the trade (milliseconds since the UNIX epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      },
      "trade_id": {
        "name": "trade_id",
        "description": "Unique (per currency) trade identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "trade_seq": {
        "name": "trade_seq",
        "description": "The sequence number of the trade within instrument",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      }
    },
    "methods": [
      "public/get_last_trades_by_currency.response.trades",
      "public/get_last_trades_by_currency_and_time.response.trades",
      "public/get_last_trades_by_instrument.response.trades",
      "public/get_last_trades_by_instrument_and_time.response.trades"
    ],
    "subscriptions": [
    ]
  },
  "TransferEntry": {
    "description": "",
    "properties": {
      "amount": {
        "name": "amount",
        "description": "Amount of funds in given currency",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "created_timestamp": {
        "name": "created_timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      },
      "currency": {
        "name": "currency",
        "description": "Currency, i.e \u0060\u0022BTC\u0022\u0060, \u0060\u0022ETH\u0022\u0060, \u0060\u0022USDC\u0022\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "direction": {
        "name": "direction",
        "description": "Transfer direction",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "id": {
        "name": "id",
        "description": "Id of transfer",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      },
      "other_side": {
        "name": "other_side",
        "description": "For transfer from/to subaccount returns this subaccount name, for transfer to other account returns address, for transfer from other account returns that accounts username.",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "state": {
        "name": "state",
        "description": "Transfer state, allowed values : \u0060prepared\u0060, \u0060confirmed\u0060, \u0060cancelled\u0060, \u0060waiting_for_admin\u0060 otherwise rejection reason",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "type": {
        "name": "type",
        "description": "Type of transfer: \u0060user\u0060 - sent to user, \u0060subaccount\u0060 - sent to subaccount",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "updated_timestamp": {
        "name": "updated_timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      }
    },
    "methods": [
      "private/get_transfers.response.data"
    ],
    "subscriptions": [
    ]
  },
  "TriggerOrder": {
    "description": "",
    "properties": {
      "amount": {
        "name": "amount",
        "description": "It represents the requested order size. For perpetual and futures the amount is in USD units, for options it is amount of corresponding cryptocurrency contracts, e.g., BTC or ETH.",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "direction": {
        "name": "direction",
        "description": "Direction: \u0060buy\u0060, or \u0060sell\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "instrument_name": {
        "name": "instrument_name",
        "description": "Unique instrument identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "label": {
        "name": "label",
        "description": "User defined label (presented only when previously set for order by user)",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "last_update_timestamp": {
        "name": "last_update_timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      },
      "order_id": {
        "name": "order_id",
        "description": "Unique order identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "order_state": {
        "name": "order_state",
        "description": "Order state: \u0060\u0022triggered\u0022\u0060, \u0060\u0022cancelled\u0022\u0060, or \u0060\u0022rejected\u0022\u0060 with rejection reason (e.g. \u0060\u0022rejected:reduce_direction\u0022\u0060).",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "order_type": {
        "name": "order_type",
        "description": "Requested order type: \u0060\u0022limit\u0060 or \u0060\u0022market\u0022\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "post_only": {
        "name": "post_only",
        "description": "\u0060true\u0060 for post-only orders only",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "price": {
        "name": "price",
        "description": "Price in base currency",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "reduce_only": {
        "name": "reduce_only",
        "description": "\u0060true\u0060 for reduce-only orders only",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "request": {
        "name": "request",
        "description": "Type of last request performed on the trigger order by user or system. \u0060\u0022cancel\u0022\u0060 - when order was cancelled, \u0060\u0022trigger:order\u0022\u0060 - when trigger order spawned market or limit order after being triggered",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "timestamp": {
        "name": "timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      },
      "trigger": {
        "name": "trigger",
        "description": "Trigger type (only for trigger orders). Allowed values: \u0060\u0022index_price\u0022\u0060, \u0060\u0022mark_price\u0022\u0060, \u0060\u0022last_price\u0022\u0060.",
        "required": false,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "trigger_offset": {
        "name": "trigger_offset",
        "description": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "trigger_order_id": {
        "name": "trigger_order_id",
        "description": "Id of the user order used for the trigger-order reference before triggering",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "trigger_price": {
        "name": "trigger_price",
        "description": "Trigger price (Only for future trigger orders)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/get_trigger_order_history.response.entries"
    ],
    "subscriptions": [
    ]
  },
  "MovePositionResponseTrade": {
    "description": "",
    "properties": {
      "amount": {
        "name": "amount",
        "description": "Trade amount. For perpetual and futures - in USD units, for options it is amount of corresponding cryptocurrency contracts, e.g., BTC or ETH.",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "direction": {
        "name": "direction",
        "description": "Direction: \u0060buy\u0060, or \u0060sell\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "instrument_name": {
        "name": "instrument_name",
        "description": "Unique instrument identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "price": {
        "name": "price",
        "description": "Price in base currency",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "source_uid": {
        "name": "source_uid",
        "description": "Trade source uid",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      },
      "target_uid": {
        "name": "target_uid",
        "description": "Trade target uid",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/move_positions.response.trades"
    ],
    "subscriptions": [
    ]
  },
  "SubAccountPortfolioEntry": {
    "description": "Contains portfolio information about a subaccounts currency symbol",
    "properties": {
      "available_funds": {
        "name": "available_funds",
        "description": "",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "available_withdrawal_funds": {
        "name": "available_withdrawal_funds",
        "description": "",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "balance": {
        "name": "balance",
        "description": "",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "currency": {
        "name": "currency",
        "description": "",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "equity": {
        "name": "equity",
        "description": "",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "initial_margin": {
        "name": "initial_margin",
        "description": "",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "maintenance_margin": {
        "name": "maintenance_margin",
        "description": "",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "margin_balance": {
        "name": "margin_balance",
        "description": "",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/create_subaccount.response.portfolio.btc",
      "private/create_subaccount.response.portfolio.eth",
      "private/get_subaccounts.response.portfolio.btc",
      "private/get_subaccounts.response.portfolio.eth"
    ],
    "subscriptions": [
    ]
  },
  "UserPosition": {
    "description": "",
    "properties": {
      "average_price": {
        "name": "average_price",
        "description": "Average price of trades that built this position",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "average_price_usd": {
        "name": "average_price_usd",
        "description": "Only for options, average price in USD",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "delta": {
        "name": "delta",
        "description": "Delta parameter",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "direction": {
        "name": "direction",
        "description": "Direction: \u0060buy\u0060, \u0060sell\u0060 or \u0060zero\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "floating_profit_loss": {
        "name": "floating_profit_loss",
        "description": "Floating profit or loss",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "floating_profit_loss_usd": {
        "name": "floating_profit_loss_usd",
        "description": "Only for options, floating profit or loss in USD",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "gamma": {
        "name": "gamma",
        "description": "Only for options, Gamma parameter",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "index_price": {
        "name": "index_price",
        "description": "Current index price",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "initial_margin": {
        "name": "initial_margin",
        "description": "Initial margin",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "instrument_name": {
        "name": "instrument_name",
        "description": "Unique instrument identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "kind": {
        "name": "kind",
        "description": "Instrument kind, \u0060\u0022future\u0022\u0060 or \u0060\u0022option\u0022\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "leverage": {
        "name": "leverage",
        "description": "Current available leverage for future position",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      },
      "maintenance_margin": {
        "name": "maintenance_margin",
        "description": "Maintenance margin",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "mark_price": {
        "name": "mark_price",
        "description": "Current mark price for position\u0027s instrument",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "open_orders_margin": {
        "name": "open_orders_margin",
        "description": "Open orders margin",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "realized_funding": {
        "name": "realized_funding",
        "description": "Realized Funding in current session included in session realized profit or loss, only for positions of perpetual instruments",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "realized_profit_loss": {
        "name": "realized_profit_loss",
        "description": "Realized profit or loss",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "settlement_price": {
        "name": "settlement_price",
        "description": "Last settlement price for position\u0027s instrument 0 if instrument wasn\u0027t settled yet",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "size": {
        "name": "size",
        "description": "Position size for futures size in quote currency (e.g. USD), for options size is in base currency (e.g. BTC)",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "size_currency": {
        "name": "size_currency",
        "description": "Only for futures, position size in base currency",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "theta": {
        "name": "theta",
        "description": "Only for options, Theta parameter",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "total_profit_loss": {
        "name": "total_profit_loss",
        "description": "Profit or loss from position",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "vega": {
        "name": "vega",
        "description": "Only for options, Vega parameter",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/get_subaccounts_details.response.positions"
    ],
    "subscriptions": [
      "user.changes.{instrument_name}.{interval}.response.position",
      "user.changes.{kind}.{currency}.{interval}.response.position"
    ]
  },
  "AffiliateReceivedPayouts": {
    "description": "",
    "properties": {
      "btc": {
        "name": "btc",
        "description": "Total payout received in BTC",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "eth": {
        "name": "eth",
        "description": "Total payout received in ETH",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/get_affiliate_program_info.response.received"
    ],
    "subscriptions": [
    ]
  },
  "SubAccountPortfolio": {
    "description": "",
    "properties": {
      "btc": {
        "name": "btc",
        "description": "",
        "required": true,
        "apiDataType": "object",
        "dataType": "SubAccountPortfolioEntry",
        "arrayDataType": ""
      },
      "eth": {
        "name": "eth",
        "description": "",
        "required": true,
        "apiDataType": "object",
        "dataType": "SubAccountPortfolioEntry",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/create_subaccount.response.portfolio",
      "private/get_subaccounts.response.portfolio"
    ],
    "subscriptions": [
    ]
  },
  "MatchingEngineLimit": {
    "description": "Field not included if limits for futures are not set.",
    "properties": {
      "burst": {
        "name": "burst",
        "description": "Maximal number of (type related) matching engine requests allowed for user in burst mode",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      },
      "rate": {
        "name": "rate",
        "description": "Number of (type related) matching engine requests per second allowed for user",
        "required": true,
        "apiDataType": "integer",
        "dataType": "integer",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/get_account_summary.response.limits.futures",
      "private/get_account_summary.response.limits.matching_engine",
      "private/get_account_summary.response.limits.non_matching_engine",
      "private/get_account_summary.response.limits.options",
      "private/get_account_summary.response.limits.perpetuals"
    ],
    "subscriptions": [
    ]
  },
  "UserFees": {
    "description": "User fees in case of any discounts (available when parameter \u0060extended\u0060 = \u0060true\u0060 and user has any discounts)",
    "properties": {
      "currency": {
        "name": "currency",
        "description": "The currency the fee applies to",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "fee_type": {
        "name": "fee_type",
        "description": "Fee type - \u0060relative\u0060 if fee is calculated as a fraction of base instrument fee, \u0060fixed\u0060 if fee is calculated solely using user fee",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "instrument_type": {
        "name": "instrument_type",
        "description": "Type of the instruments the fee applies to - \u0060future\u0060 for future instruments (excluding perpetual), \u0060perpetual\u0060 for future perpetual instruments, \u0060option\u0060 for options",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "maker_fee": {
        "name": "maker_fee",
        "description": "User fee as a maker",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "taker_fee": {
        "name": "taker_fee",
        "description": "User fee as a taker",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/get_account_summary.response.fees"
    ],
    "subscriptions": [
    ]
  },
  "IndexDeliveryPrice": {
    "description": "",
    "properties": {
      "date": {
        "name": "date",
        "description": "The event date with year, month and day",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "delivery_price": {
        "name": "delivery_price",
        "description": "The settlement price for the instrument. Only when \u0060state = closed\u0060",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      }
    },
    "methods": [
      "public/get_delivery_prices.response.data"
    ],
    "subscriptions": [
    ]
  },
  "OptionGreek": {
    "description": "Only for options",
    "properties": {
      "delta": {
        "name": "delta",
        "description": "(Only for option) The delta value for the option",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "gamma": {
        "name": "gamma",
        "description": "(Only for option) The gamma value for the option",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "rho": {
        "name": "rho",
        "description": "(Only for option) The rho value for the option",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "theta": {
        "name": "theta",
        "description": "(Only for option) The theta value for the option",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "vega": {
        "name": "vega",
        "description": "(Only for option) The vega value for the option",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      }
    },
    "methods": [
      "public/get_order_book.response.greeks",
      "public/get_order_book_by_instrument_id.response.greeks",
      "public/ticker.response.greeks"
    ],
    "subscriptions": [
      "incremental_ticker.{instrument_name}.response.greeks",
      "ticker.{instrument_name}.{interval}.response.greeks"
    ]
  },
  "SettlementEntry": {
    "description": "Contains information about public settlement, delivery or bankruptcy",
    "properties": {
      "funded": {
        "name": "funded",
        "description": "funded amount (bankruptcy only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "funding": {
        "name": "funding",
        "description": "funding (in base currency ; settlement for perpetual product only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "index_price": {
        "name": "index_price",
        "description": "underlying index price at time of event (in quote currency; settlement and delivery only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "instrument_name": {
        "name": "instrument_name",
        "description": "instrument name (settlement and delivery only)",
        "required": false,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "mark_price": {
        "name": "mark_price",
        "description": "mark price for at the settlement time (in quote currency; settlement and delivery only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "position": {
        "name": "position",
        "description": "position size (in quote currency; settlement and delivery only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "profit_loss": {
        "name": "profit_loss",
        "description": "profit and loss (in base currency; settlement and delivery only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "session_bankruptcy": {
        "name": "session_bankrupcy",
        "description": "value of session bankruptcy (in base currency; bankruptcy only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "session_profit_loss": {
        "name": "session_profit_loss",
        "description": "total value of session profit and losses (in base currency)",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "session_tax": {
        "name": "session_tax",
        "description": "total amount of paid taxes/fees (in base currency; bankruptcy only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "session_tax_rate": {
        "name": "session_tax_rate",
        "description": "rate of paid taxes/fees (in base currency; bankruptcy only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "socialized": {
        "name": "socialized",
        "description": "the amount of the socialized losses (in base currency; bankruptcy only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "timestamp": {
        "name": "timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      },
      "type": {
        "name": "type",
        "description": "The type of settlement. \u0060settlement\u0060, \u0060delivery\u0060 or \u0060bankruptcy\u0060.",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/get_settlement_history_by_instrument.response.settlements",
      "private/get_settlement_history_by_currency.response.settlements",
      "public/get_last_settlements_by_currency.response.settlements",
      "public/get_last_settlements_by_instrument.response.settlements"
    ],
    "subscriptions": [
    ]
  },
  "UserMatchingEngineLimits": {
    "description": "",
    "properties": {
      "futures": {
        "name": "futures",
        "description": "Field not included if limits for futures are not set.",
        "required": false,
        "apiDataType": "object",
        "dataType": "object",
        "arrayDataType": ""
      },
      "matching_engine": {
        "name": "matching_engine",
        "description": "",
        "required": true,
        "apiDataType": "object",
        "dataType": "object",
        "arrayDataType": ""
      },
      "non_matching_engine": {
        "name": "non_matching_engine",
        "description": "",
        "required": true,
        "apiDataType": "object",
        "dataType": "object",
        "arrayDataType": ""
      },
      "options": {
        "name": "options",
        "description": "Field not included if limits for options are not set.",
        "required": false,
        "apiDataType": "object",
        "dataType": "object",
        "arrayDataType": ""
      },
      "perpetuals": {
        "name": "perpetuals",
        "description": "Field not included if limits for perpetuals are not set.",
        "required": false,
        "apiDataType": "object",
        "dataType": "object",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/get_account_summary.response.limits"
    ],
    "subscriptions": [
    ]
  },
  "OrderBookStats": {
    "description": "",
    "properties": {
      "high": {
        "name": "high",
        "description": "Highest price during 24h",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "low": {
        "name": "low",
        "description": "Lowest price during 24h",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "price_change": {
        "name": "price_change",
        "description": "24-hour price change expressed as a percentage, \u0060null\u0060 if there weren\u0027t any trades",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "volume": {
        "name": "volume",
        "description": "Volume during last 24h in base currency",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "volume_usd": {
        "name": "volume_usd",
        "description": "Volume in usd (futures only)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      }
    },
    "methods": [
      "public/get_order_book.response.stats",
      "public/get_order_book_by_instrument_id.response.stats",
      "public/ticker.response.stats"
    ],
    "subscriptions": [
      "incremental_ticker.{instrument_name}.response.stats",
      "ticker.{instrument_name}.{interval}.response.stats"
    ]
  },
  "FundingChartDataEntry": {
    "description": "",
    "properties": {
      "index_price": {
        "name": "index_price",
        "description": "Current index price",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "interest_8h": {
        "name": "interest_8h",
        "description": "Historical interest 8h value",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "timestamp": {
        "name": "timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      }
    },
    "methods": [
      "public/get_funding_chart_data.response.data"
    ],
    "subscriptions": [
    ]
  },
  "MovePositionRequestTrade": {
    "description": "List of trades for position move",
    "properties": {
      "instrument_name": {
        "name": "instrument_name",
        "description": "Instrument name",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "price": {
        "name": "price",
        "description": "Price for trade - if not provided mark price of the instrument is used",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "amount": {
        "name": "amount",
        "description": "It represents the requested trade size. For perpetual and futures the amount is in USD units, for options it is amount of corresponding cryptocurrency contracts, e.g., BTC or ETH. Amount can\u0027t exceed position size.",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/move_positions.request.trades"
    ],
    "subscriptions": [
    ]
  },
  "BlockTradeTradesEntry": {
    "description": "List of trades for block trade",
    "properties": {
      "instrument_name": {
        "name": "instrument_name",
        "description": "Instrument name",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "price": {
        "name": "price",
        "description": "Price for trade",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "amount": {
        "name": "amount",
        "description": "It represents the requested trade size. For perpetual and futures the amount is in USD units, for options it is amount of corresponding cryptocurrency contracts, e.g., BTC or ETH",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "direction": {
        "name": "direction",
        "description": "Direction of trade from the maker perspective",
        "required": true,
        "apiDataType": "string",
        "dataType": "TradeDirection",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/execute_block_trade.request.trades",
      "private/verify_block_trade.request.trades"
    ],
    "subscriptions": [
    ]
  },
  "UserOrder": {
    "description": "",
    "properties": {
      "mmp_cancelled": {
        "name": "mmp_cancelled",
        "description": "\u0060true\u0060 if order was cancelled by mmp trigger (optional)",
        "required": false,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "order_state": {
        "name": "order_state",
        "description": "Order state: \u0060\u0022open\u0022\u0060, \u0060\u0022filled\u0022\u0060, \u0060\u0022rejected\u0022\u0060, \u0060\u0022cancelled\u0022\u0060, \u0060\u0022untriggered\u0022\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "max_show": {
        "name": "max_show",
        "description": "Maximum amount within an order to be shown to other traders, 0 for invisible order.",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "reject_post_only": {
        "name": "reject_post_only",
        "description": "\u0060true\u0060 if order has \u0060reject_post_only\u0060 flag (field is present only when \u0060post_only\u0060 is \u0060true\u0060)",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "api": {
        "name": "api",
        "description": "\u0060true\u0060 if created with API",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "amount": {
        "name": "amount",
        "description": "It represents the requested order size. For perpetual and futures the amount is in USD units, for options it is amount of corresponding cryptocurrency contracts, e.g., BTC or ETH.",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "web": {
        "name": "web",
        "description": "\u0060true\u0060 if created via Deribit frontend (optional)",
        "required": false,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "instrument_name": {
        "name": "instrument_name",
        "description": "Unique instrument identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "advanced": {
        "name": "advanced",
        "description": "advanced type: \u0060\u0022usd\u0022\u0060 or \u0060\u0022implv\u0022\u0060 (Only for options; field is omitted if not applicable).",
        "required": false,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "triggered": {
        "name": "triggered",
        "description": "Whether the trigger order has been triggered",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "block_trade": {
        "name": "block_trade",
        "description": "\u0060true\u0060 if order made from block_trade trade, added only in that case.",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "original_order_type": {
        "name": "original_order_type",
        "description": "Original order type. Optional field",
        "required": false,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "trigger_offset": {
        "name": "trigger_offset",
        "description": "The maximum deviation from the price peak beyond which the order will be triggered (Only for trailing trigger orders)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "price": {
        "name": "price",
        "description": "Price in base currency",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "time_in_force": {
        "name": "time_in_force",
        "description": "Order time in force: \u0060\u0022good_til_cancelled\u0022\u0060, \u0060\u0022good_til_day\u0022\u0060, \u0060\u0022fill_or_kill\u0022\u0060 or \u0060\u0022immediate_or_cancel\u0022\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "auto_replaced": {
        "name": "auto_replaced",
        "description": "Options, advanced orders only - \u0060true\u0060 if last modification of the order was performed by the pricing engine, otherwise \u0060false\u0060.",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "last_update_timestamp": {
        "name": "last_update_timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      },
      "post_only": {
        "name": "post_only",
        "description": "\u0060true\u0060 for post-only orders only",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "replaced": {
        "name": "replaced",
        "description": "\u0060true\u0060 if the order was edited (by user or - in case of advanced options orders - by pricing engine), otherwise \u0060false\u0060.",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "filled_amount": {
        "name": "filled_amount",
        "description": "Filled amount of the order. For perpetual and futures the filled_amount is in USD units, for options - in units or corresponding cryptocurrency contracts, e.g., BTC or ETH.",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "average_price": {
        "name": "average_price",
        "description": "Average fill price of the order",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "order_id": {
        "name": "order_id",
        "description": "Unique order identifier",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "reduce_only": {
        "name": "reduce_only",
        "description": "\u0060true\u0060 for reduce-only orders only",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "commission": {
        "name": "commission",
        "description": "Commission paid so far (in base currency)",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "app_name": {
        "name": "app_name",
        "description": "The name of the application that placed the order on behalf of the user (optional).",
        "required": false,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "label": {
        "name": "label",
        "description": "User defined label (up to 64 characters)",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "trigger_order_id": {
        "name": "trigger_order_id",
        "description": "Id of the trigger order that created the order (Only for orders that were created by triggered orders).",
        "required": false,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "trigger_price": {
        "name": "trigger_price",
        "description": "Trigger price (Only for future trigger orders)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "creation_timestamp": {
        "name": "creation_timestamp",
        "description": "The timestamp (milliseconds since the Unix epoch)",
        "required": true,
        "apiDataType": "integer",
        "dataType": "DateTime",
        "arrayDataType": "",
        "converters": [
          "MillisecondsTimestampConverter"
        ]
      },
      "direction": {
        "name": "direction",
        "description": "Direction: \u0060buy\u0060, or \u0060sell\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "is_liquidation": {
        "name": "is_liquidation",
        "description": "\u0060true\u0060 if order was automatically created during liquidation",
        "required": true,
        "apiDataType": "boolean",
        "dataType": "boolean",
        "arrayDataType": ""
      },
      "order_type": {
        "name": "order_type",
        "description": "Order type: \u0060\u0022limit\u0022\u0060, \u0060\u0022market\u0022\u0060, \u0060\u0022stop_limit\u0022\u0060, \u0060\u0022stop_market\u0022\u0060",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "usd": {
        "name": "usd",
        "description": "Option price in USD (Only if \u0060advanced=\u0022usd\u0022\u0060)",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "profit_loss": {
        "name": "profit_loss",
        "description": "Profit and loss in base currency.",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "trigger_reference_price": {
        "name": "trigger_reference_price",
        "description": "The price of the given trigger at the time when the order was placed (Only for trailing trigger orders)",
        "required": false,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "implv": {
        "name": "implv",
        "description": "Implied volatility in percent. (Only if \u0060advanced=\u0022implv\u0022\u0060)",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      },
      "trigger": {
        "name": "trigger",
        "description": "Trigger type (only for trigger orders). Allowed values: \u0060\u0022index_price\u0022\u0060, \u0060\u0022mark_price\u0022\u0060, \u0060\u0022last_price\u0022\u0060.",
        "required": false,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      }
    },
    "methods": [
      "private/get_subaccounts_details.response.open_orders",
      "private/buy.response.order",
      "private/sell.response.order",
      "private/edit.response.order",
      "private/edit_by_label.response.order",
      "private/close_position.response.order"
    ],
    "subscriptions": [
      "user.changes.{instrument_name}.{interval}.response.orders",
      "user.changes.{kind}.{currency}.{interval}.response.orders"
    ]
  },
  "WithdrawalPriority": {
    "description": "",
    "properties": {
      "name": {
        "name": "name",
        "description": "",
        "required": true,
        "apiDataType": "string",
        "dataType": "string",
        "arrayDataType": ""
      },
      "value": {
        "name": "value",
        "description": "",
        "required": true,
        "apiDataType": "number",
        "dataType": "number",
        "arrayDataType": ""
      }
    },
    "methods": [
      "public/get_currencies.response.withdrawal_priorities"
    ],
    "subscriptions": [
    ]
  }
}
